<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.RolesMapper">

    <!--roles-->
    <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.Roles">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="roles_name" jdbcType="VARCHAR" property="rolesName" />
        <result column="roles_code" jdbcType="VARCHAR" property="rolesCode" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <resultMap id="rolesWithPermissionMap" type="com.kaishengit.tms.entity.Roles" extends="BaseResultMap">
        <!--permissionList-->
        <collection property="permissionList" ofType="com.kaishengit.tms.entity.Permission">
            <id property="id" column="id"/>
            <result property="permissionName" column="permission_name"/>
            <result property="permissionCode" column="permission_code"/>
            <result property="permissionType" column="permission_type"/>
            <result property="parentId" column="parent_id"/>
            <result property="createTime" column="create_time"/>
            <result property="updateTime" column="update_time"/>
            <result property="url" column="url"/>
        </collection>

    </resultMap>





  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, roles_name, roles_code, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.RolesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from roles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from roles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.RolesExample">
    delete from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.tms.entity.Roles">
    insert into roles (id, roles_name, roles_code, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{rolesName,jdbcType=VARCHAR}, #{rolesCode,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.Roles">
    insert into roles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="rolesName != null">
        roles_name,
      </if>
      <if test="rolesCode != null">
        roles_code,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rolesName != null">
        #{rolesName,jdbcType=VARCHAR},
      </if>
      <if test="rolesCode != null">
        #{rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.tms.entity.RolesExample" resultType="java.lang.Long">
    select count(*) from roles
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>






    <!--根据登录人员id查找对应的角色信息-->
    <select id="findRolesByAccountId" resultType="com.kaishengit.tms.entity.Roles">
      SELECT *
      FROM account_roles
      LEFT JOIN roles
      on roles_id = roles.id
      where account_roles.account_id = {id}
    </select>
    <!--角色首页显示所有角色信息和权限信息-->
    <select id="findAllRolesWithPermissionList" resultMap="rolesWithPermissionMap">
        select *
        from roles
        LEFT JOIN roles_permission
        on roles.id = roles_permission.roles_id
        LEFT JOIN permission
        on roles_permission.permission_id = permission.id
    </select>
    <!--根据roleId查询角色和对应的权限-->
    <select id="findRolesWithPermissionListByRoleId" resultMap="rolesWithPermissionMap">
        select *
        from roles
        LEFT JOIN roles_permission
        on roles.id = roles_permission.roles_id
        LEFT JOIN permission
        on roles_permission.permission_id = permission.id
        where roles_id = {id}
    </select>





    <update id="updateByExampleSelective" parameterType="map">
    update roles
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rolesName != null">
        roles_name = #{record.rolesName,jdbcType=VARCHAR},
      </if>
      <if test="record.rolesCode != null">
        roles_code = #{record.rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update roles
    set id = #{record.id,jdbcType=INTEGER},
      roles_name = #{record.rolesName,jdbcType=VARCHAR},
      roles_code = #{record.rolesCode,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.Roles">
    update roles
    <set>
      <if test="rolesName != null">
        roles_name = #{rolesName,jdbcType=VARCHAR},
      </if>
      <if test="rolesCode != null">
        roles_code = #{rolesCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.Roles">
    update roles
    set roles_name = #{rolesName,jdbcType=VARCHAR},
      roles_code = #{rolesCode,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>